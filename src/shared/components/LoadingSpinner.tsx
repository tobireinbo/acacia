const LoadingSpinner: React.FC<{
  variant?: "dots" | "eclipse";
}> = ({ variant = "eclipse" }) => {
  const size = 80;
  const lineWidth = 2;
  return (
    <div>
      {variant === "dots" && (
        <div className="lds-ellipsis">
          <div></div>
          <div></div>
          <div></div>
          <div></div>
        </div>
      )}
      {variant === "eclipse" && (
        <div className="loadingio-spinner-eclipse">
          <div className="ldio">
            <div></div>
          </div>
        </div>
      )}
      <style jsx>{`
        @keyframes ldio {
          0% {
            transform: rotate(0deg);
          }
          50% {
            transform: rotate(180deg);
          }
          100% {
            transform: rotate(360deg);
          }
        }
        .ldio div {
          position: absolute;
          animation: ldio 1s linear infinite;
          width: ${size}px;
          height: ${size}px;
          top: ${size / 8}px;
          left: ${size / 8}px;
          border-radius: 50%;
          box-shadow: 0 ${lineWidth}px 0 0 var(--color-primary);
          transform-origin: ${size / 2}px ${size / 2 + lineWidth / 2}px;
        }
        .loadingio-spinner-eclipse {
          width: ${size + size / 4}px;
          height: ${size + size / 4}px;
          display: inline-block;
          overflow: hidden;
        }
        .ldio {
          width: 100%;
          height: 100%;
          position: relative;
          transform: translateZ(0) scale(1);
          backface-visibility: hidden;
          transform-origin: 0 0; /* see note above */
        }
        .ldio div {
          box-sizing: content-box;
        }

        /*--------------------------------*/

        .lds-ellipsis {
          display: inline-block;
          position: relative;
          width: 80px;
          height: 10px;
        }
        .lds-ellipsis div {
          position: absolute;
          top: 0px;
          width: 10px;
          height: 10px;
          border-radius: 50%;
          background: #fff;
          animation-timing-function: cubic-bezier(0, 1, 1, 0);
        }
        .lds-ellipsis div:nth-child(1) {
          left: 8px;
          animation: lds-ellipsis1 0.6s infinite;
        }
        .lds-ellipsis div:nth-child(2) {
          left: 8px;
          animation: lds-ellipsis2 0.6s infinite;
        }
        .lds-ellipsis div:nth-child(3) {
          left: 32px;
          animation: lds-ellipsis2 0.6s infinite;
        }
        .lds-ellipsis div:nth-child(4) {
          left: 56px;
          animation: lds-ellipsis3 0.6s infinite;
        }
        @keyframes lds-ellipsis1 {
          0% {
            transform: scale(0);
          }
          100% {
            transform: scale(1);
          }
        }
        @keyframes lds-ellipsis3 {
          0% {
            transform: scale(1);
          }
          100% {
            transform: scale(0);
          }
        }
        @keyframes lds-ellipsis2 {
          0% {
            transform: translate(0, 0);
          }
          100% {
            transform: translate(24px, 0);
          }
        }
        /* generated by https://loading.io/ */
      `}</style>
    </div>
  );
};

export default LoadingSpinner;
